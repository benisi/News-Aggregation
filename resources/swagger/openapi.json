{
    "openapi": "3.0.0",
    "info": {
        "title": "News Aggregator API",
        "description": "API for the News Aggregator case study. This documentation provides a clear, interactive way to test all available endpoints.",
        "version": "1.0.0"
    },
    "paths": {
        "/api/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "description": "Creates a new user account and returns the user object and an API token.",
                "operationId": "registerUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthSuccessResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Log in a user",
                "description": "Authenticates a user and returns the user object and an API token.",
                "operationId": "loginUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User logged in successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthSuccessResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials."
                    },
                    "422": {
                        "description": "Validation error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Log out a user",
                "description": "Invalidates the user's current API token. Requires authentication.",
                "operationId": "logoutUser",
                "security": [{
                    "bearerAuth": []
                }],
                "responses": {
                    "200": {
                        "description": "Logged out successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logged out successfully."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated."
                    }
                }
            }
        },
        "/api/articles": {
            "get": {
                "tags": [
                    "Articles"
                ],
                "summary": "Fetch articles",
                "description": "Retrieves a paginated list of articles based on search and filter criteria.",
                "operationId": "getArticles",
                "parameters": [{
                        "name": "search",
                        "in": "query",
                        "description": "A keyword to search for in article titles and descriptions.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date_from",
                        "in": "query",
                        "description": "The start date to filter articles (YYYY-MM-DD).",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "date_to",
                        "in": "query",
                        "description": "The end date to filter articles (YYYY-MM-DD). The filter is inclusive, covering the entire day.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "category_id",
                        "in": "query",
                        "description": "A comma-separated list of category IDs to filter by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "source_id",
                        "in": "query",
                        "description": "A comma-separated list of source IDs to filter by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "author_id",
                        "in": "query",
                        "description": "A comma-separated list of author IDs to filter by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A paginated list of articles.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedArticles"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user/feed": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Fetch personalized article feed",
                "description": "Retrieves a paginated list of articles filtered automatically by the authenticated user's saved preferences (sources, categories, authors). Allows dynamic search override.",
                "operationId": "getPersonalizedFeed",
                "security": [{
                    "bearerAuth": []
                }],
                "parameters": [{
                        "name": "search",
                        "in": "query",
                        "description": "Optional keyword to search within the personalized feed.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date_from",
                        "in": "query",
                        "description": "Optional start date filter (YYYY-MM-DD).",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "The number of results per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A paginated list of articles. If no preferences are saved, it returns an empty data array with the `UNCONFIGURED_FEED` status in the `meta` field.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [{
                                            "$ref": "#/components/schemas/PaginatedArticles"
                                        },
                                        {
                                            "$ref": "#/components/schemas/UnconfiguredFeedResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated."
                    }
                }
            }
        },
        "/api/sources": {
            "get": {
                "tags": [
                    "Lookups"
                ],
                "summary": "Get all sources",
                "description": "Retrieves a list of all available news sources.",
                "operationId": "getSources",
                "responses": {
                    "200": {
                        "description": "A collection of source resources.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SourceResource"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/categories": {
            "get": {
                "tags": [
                    "Lookups"
                ],
                "summary": "Get all categories",
                "description": "Retrieves a list of all available article categories.",
                "operationId": "getCategories",
                "responses": {
                    "200": {
                        "description": "A collection of category resources.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CategoryResource"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/authors": {
            "get": {
                "tags": [
                    "Lookups"
                ],
                "summary": "Search for authors",
                "description": "Retrieves a paginated list of authors, optionally filtered by a search term.",
                "operationId": "getAuthors",
                "parameters": [{
                        "name": "search",
                        "in": "query",
                        "description": "A name to search for.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "The number of results per page (max 100).",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A paginated list of authors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedAuthors"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user/preferences": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get user preferences",
                "description": "Retrieves the current user's saved preferences. Requires authentication.",
                "operationId": "getUserPreferences",
                "security": [{
                    "bearerAuth": []
                }],
                "responses": {
                    "200": {
                        "description": "User preferences object.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreferencesResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated."
                    }
                }
            },
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Store user preferences",
                "description": "Saves or updates the current user's preferences. Requires authentication.",
                "operationId": "storeUserPreferences",
                "security": [{
                    "bearerAuth": []
                }],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StorePreferencesRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Preferences updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreferencesUpdateResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error."
                    },
                    "401": {
                        "description": "Unauthenticated."
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        },
        "schemas": {
            "RegisterRequest": {
                "type": "object",
                "required": [
                    "name",
                    "email",
                    "password",
                    "password_confirmation"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john.doe@example.com"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "example": "secret123"
                    },
                    "password_confirmation": {
                        "type": "string",
                        "format": "password",
                        "example": "secret123"
                    }
                }
            },
            "LoginRequest": {
                "type": "object",
                "required": [
                    "email",
                    "password"
                ],
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john.doe@example.com"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "example": "secret123"
                    }
                }
            },
            "StorePreferencesRequest": {
                "type": "object",
                "properties": {
                    "preferred_sources": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "example": [
                            1,
                            5,
                            10
                        ]
                    },
                    "preferred_categories": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "example": [
                            2,
                            6
                        ]
                    },
                    "preferred_authors": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "example": [
                            101,
                            205
                        ]
                    }
                }
            },
            "UserResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john.doe@example.com"
                    }
                }
            },
            "SourceResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "The New York Times"
                    }
                }
            },
            "CategoryResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Business"
                    }
                }
            },
            "AuthorResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Jane Smith"
                    }
                }
            },
            "ArticleResource": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string",
                        "example": "Breaking News: Market Hits Record High"
                    },
                    "description": {
                        "type": "string",
                        "example": "A detailed report on the recent surge in the stock market."
                    },
                    "url": {
                        "type": "string",
                        "format": "url"
                    },
                    "image_url": {
                        "type": "string",
                        "format": "url"
                    },
                    "published_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "AuthSuccessResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/UserResource"
                    },
                    "token": {
                        "type": "string",
                        "example": "1|abcdef123654"
                    }
                }
            },
            "PreferencesResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "preferred_sources": {
                                "type": "string",
                                "example": "1,5,10"
                            },
                            "preferred_categories": {
                                "type": "string",
                                "example": "2,6"
                            }
                        }
                    }
                }
            },
            "PreferencesUpdateResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "User preferences updated successfully."
                    },
                    "data": {
                        "type": "object",
                        "properties": {
                            "preferred_sources": {
                                "type": "string",
                                "example": "1,5,10"
                            },
                            "preferred_categories": {
                                "type": "string",
                                "example": "2,6"
                            }
                        }
                    }
                }
            },
            "ValidationError": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "The given data was invalid."
                    },
                    "errors": {
                        "type": "object",
                        "example": {
                            "email": [
                                "The email field is required."
                            ]
                        }
                    }
                }
            },
            "PaginationLinks": {
                "type": "object",
                "properties": {
                    "first": {
                        "type": "string",
                        "format": "url"
                    },
                    "last": {
                        "type": "string",
                        "format": "url"
                    },
                    "prev": {
                        "type": "string",
                        "format": "url",
                        "nullable": true
                    },
                    "next": {
                        "type": "string",
                        "format": "url",
                        "nullable": true
                    }
                }
            },
            "PaginationMeta": {
                "type": "object",
                "properties": {
                    "current_page": {
                        "type": "integer"
                    },
                    "from": {
                        "type": "integer"
                    },
                    "last_page": {
                        "type": "integer"
                    },
                    "path": {
                        "type": "string",
                        "format": "url"
                    },
                    "per_page": {
                        "type": "integer"
                    },
                    "to": {
                        "type": "integer"
                    },
                    "total": {
                        "type": "integer"
                    }
                }
            },
            "PaginatedArticles": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ArticleResource"
                        }
                    },
                    "links": {
                        "$ref": "#/components/schemas/PaginationLinks"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/PaginationMeta"
                    }
                }
            },
            "PaginatedAuthors": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AuthorResource"
                        }
                    },
                    "links": {
                        "$ref": "#/components/schemas/PaginationLinks"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/PaginationMeta"
                    }
                }
            },
            "UnconfiguredFeedMeta": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "enum": [
                            "UNCONFIGURED_FEED"
                        ],
                        "example": "UNCONFIGURED_FEED",
                        "description": "The specific status code indicating the user has no preferences set."
                    },
                    "message": {
                        "type": "string",
                        "example": "Your personalized feed is unconfigured. Please select preferred sources, categories, or authors.",
                        "description": "A user-friendly message explaining the status."
                    }
                }
            },
            "UnconfiguredFeedResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {},
                        "description": "An empty array of articles."
                    },
                    "meta": {
                        "$ref": "#/components/schemas/UnconfiguredFeedMeta"
                    }
                }
            }
        }
    }
}
